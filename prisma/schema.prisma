// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

  model Student {
    id            String   @id @default(uuid())
    name          String
    nisn          String   @unique
    ijazahNumber  String   @unique
    schoolOrigin  String
    major         String
    phone         String
    status        Status   @default(PENDING)
    password      String   
    selectionResult StatusSelection @default(PENDING) 
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    verification  Verification?
    selection     Selection?
  }

  enum Status {
    PENDING   // Baru mendaftar
    REJECTED  // Data ditolak (misal NISN/Ijazah tidak valid)
    VERIFIED  // Data sudah diverifikasi admin
    PASSED    // Lulus seleksi
    FAILED    // Tidak lulus seleksi
  }

  model Verification {
    id        String   @id @default(uuid())
    student   Student  @relation(fields: [studentId], references: [id])
    studentId String   @unique
    admin     Admin?   @relation(fields: [adminId], references: [id])
    adminId   String?  // Bisa null kalau belum diverifikasi
    note      String?  
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }

  model Selection {
    id        String   @id @default(uuid())
    student   Student  @relation(fields: [studentId], references: [id])
    studentId String   @unique
    admin     Admin    @relation(fields: [adminId], references: [id])
    adminId   String  // Harus ada admin
    result    StatusSelection @default(PENDING)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }


  enum StatusSelection {
    PENDING   // Belum ditentukan
    PASSED    // Lulus seleksi
    FAILED    // Tidak lulus seleksi
  }

  model Admin {
    id        String   @id @default(uuid())
    name      String
    email     String   @unique
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    verifications Verification[]
    selections    Selection[]
  }
